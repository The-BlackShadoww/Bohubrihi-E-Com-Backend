module.exports.ipn = async (req, res) => {
    try {
        const payment = new Payment(req.body);
        const tran_id = payment["tran_id"];
        const ipnRequest = {
            status: payment["status"],
            tran_date: payment["tran_date"],
            tran_id: payment["tran_id"],
            val_id: payment["val_id"],
        };
        console.log("This is the ipn post request =>", ipnRequest);
        if (payment["status"] === "VALID") {
            const storeId = process.env.SSLCOMMERZ_STORE_ID;
            const storePassword = process.env.SSLCOMMERZ_STORE_PASSWORD;
            const val_id = payment["val_id"];

            const formData = new FormData();
            formData.append("store_id", storeId);
            formData.append("store_passwd", storePassword);
            formData.append("val_id", val_id);

            const response = await fetch(
                `https://sandbox.sslcommerz.com/validator/api/validationserverAPI.php?val_id=${val_id}&store_id=${storeId}&store_passwd=${storePassword}&format=json`,
                {
                    method: "GET",
                    mode: "cors",
                    cache: "no-cache",
                    credentials: "same-origin",
                    redirect: "follow",
                    referrer: "no-referrer",
                }
            );

            const data = await response.json();
            console.log("This is ipn GET request data =>", data);

            if (data.status === "VALID") {
                console.log("Yup! The transaction is valid");
                await Order.updateOne(
                    { transaction_id: tran_id },
                    { status: "Complete" }
                );
                await CartItem.deleteMany(order.cartItems);
            } else {
                console.log("Still the transaction is not valid");
                await Order.deleteOne({ transaction_id: tran_id });
            }
        } else {
            console.log("Payment is not valid");
        }

        await payment.save();

        return res.status(200).send("IPN");
    } catch (err) {
        console.log("this catch error=> ", err);
    }
};